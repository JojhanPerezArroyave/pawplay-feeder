#!/bin/bash

# Script de configuraci√≥n r√°pida para PawPlay Bot
# Automatiza la instalaci√≥n y configuraci√≥n inicial

echo "üê± PawPlay Feeder - Configuraci√≥n del Bot de Telegram"
echo "====================================================="

# Funci√≥n para verificar si Python est√° instalado
check_python() {
    if command -v python3 &> /dev/null; then
        echo "‚úÖ Python3 encontrado"
        PYTHON_CMD="python3"
    elif command -v python &> /dev/null; then
        echo "‚úÖ Python encontrado"
        PYTHON_CMD="python"
    else
        echo "‚ùå Python no encontrado. Por favor instala Python 3.6+"
        exit 1
    fi
}

# Funci√≥n para verificar si pip est√° instalado
check_pip() {
    if command -v pip3 &> /dev/null; then
        echo "‚úÖ pip3 encontrado"
        PIP_CMD="pip3"
    elif command -v pip &> /dev/null; then
        echo "‚úÖ pip encontrado"
        PIP_CMD="pip"
    else
        echo "‚ùå pip no encontrado. Por favor instala pip"
        exit 1
    fi
}

# Funci√≥n para instalar dependencias
install_dependencies() {
    echo "üì¶ Instalando dependencias de Python..."
    $PIP_CMD install -r requirements.txt
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ Dependencias instaladas correctamente"
    else
        echo "‚ùå Error instalando dependencias"
        exit 1
    fi
}

# Funci√≥n para solicitar token del bot
configure_token() {
    echo ""
    echo "üîê Configuraci√≥n del Token de Telegram"
    echo "--------------------------------------"
    echo "Para obtener un token:"
    echo "1. Busca @BotFather en Telegram"
    echo "2. Env√≠a /newbot"
    echo "3. Sigue las instrucciones"
    echo "4. Guarda el token que te proporcione"
    echo ""
    
    read -p "ü§ñ Ingresa tu token de bot de Telegram: " TOKEN
    
    if [ -z "$TOKEN" ]; then
        echo "‚ùå Token vac√≠o. Puedes configurarlo manualmente en pawplay_bot.py"
        return
    fi
    
    # Reemplazar el token en el archivo
    if [[ "$OSTYPE" == "darwin"* ]]; then
        # macOS
        sed -i '' "s/TU_TOKEN_AQUI/$TOKEN/g" pawplay_bot.py
    else
        # Linux y otros
        sed -i "s/TU_TOKEN_AQUI/$TOKEN/g" pawplay_bot.py
    fi
    
    echo "‚úÖ Token configurado correctamente"
}

# Funci√≥n para crear archivos de ejemplo
create_examples() {
    echo "üìÑ Creando archivos de ejemplo..."
    
    # Crear archivo de configuraci√≥n de ejemplo
    cat > config_example.json << EOF
{
  "bot_token": "TU_TOKEN_AQUI",
  "authorized_users": [],
  "debug_mode": false,
  "auto_save": true
}
EOF

    echo "‚úÖ Archivo config_example.json creado"
}

# Funci√≥n para verificar la configuraci√≥n
test_configuration() {
    echo ""
    echo "üß™ Verificando configuraci√≥n..."
    
    # Verificar que el archivo principal existe
    if [ ! -f "pawplay_bot.py" ]; then
        echo "‚ùå Archivo pawplay_bot.py no encontrado"
        return 1
    fi
    
    # Verificar que las dependencias est√°n instaladas
    $PYTHON_CMD -c "import telepot; print('‚úÖ telepot instalado')" 2>/dev/null || echo "‚ùå telepot no instalado"
    
    echo "‚úÖ Configuraci√≥n verificada"
}

# Funci√≥n para mostrar instrucciones de uso
show_usage() {
    echo ""
    echo "üöÄ ¬°Configuraci√≥n completada!"
    echo "============================="
    echo ""
    echo "Para iniciar el bot:"
    echo "  $PYTHON_CMD pawplay_bot.py"
    echo ""
    echo "Comandos principales del bot:"
    echo "  /start    - Inicializar bot"
    echo "  /menu     - Mostrar men√∫ principal"
    echo "  /facil    - Dificultad f√°cil"
    echo "  /medio    - Dificultad media"
    echo "  /dificil  - Dificultad dif√≠cil"
    echo "  /iniciar  - Comenzar juego"
    echo "  /parar    - Pausar juego"
    echo "  /estado   - Ver estado actual"
    echo ""
    echo "üí° Tip: Usa /ayuda en Telegram para ver todos los comandos"
    echo ""
    echo "üîß Archivos importantes:"
    echo "  - pawplay_bot.py      : Bot principal"
    echo "  - game_data.json      : Datos del juego (generado autom√°ticamente)"
    echo "  - game_stats.json     : Estad√≠sticas (generado autom√°ticamente)"
    echo "  - test_integration.py : Script de pruebas"
    echo ""
}

# Funci√≥n principal
main() {
    echo "Iniciando configuraci√≥n..."
    
    # Cambiar al directorio del bot
    cd "$(dirname "$0")"
    
    # Verificar requisitos
    check_python
    check_pip
    
    # Instalar dependencias
    install_dependencies
    
    # Configurar token
    configure_token
    
    # Crear archivos de ejemplo
    create_examples
    
    # Verificar configuraci√≥n
    test_configuration
    
    # Mostrar instrucciones
    show_usage
    
    echo "‚ú® ¬°Listo para usar!"
}

# Ejecutar script principal
main